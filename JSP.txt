tomcat bin -> catalina.bat run
4/24 Fri
jsp forward
jsp include
디렉티브 태그
*파일 임폴트 new>General>Existring Projects into Workspace
	- option copy projects into workspace 체크
	- JRE가 없을 때 프로젝트 우클릭 Build Path> 3번째 탭 Libraries> JRE remove>
				Add Library> JRE System Library(JRE)
				Add Library> Sever Runtime(tomcat)



*부트트랩? 탬플릿? 모듈파일
* ㄴ https://www.w3schools.com/
4/27 Mon
자바빈(JavaBean) *DTO* --- 자바로 작성된 컴포넌트를 말한다.
.java 폴더는 src폴더 안에 넣음
	1.pakage name set.
	2.java.lang 외에 패키지는 import하여야 됨
	3.class{필드(property),메소드(getter&setter} 
		<jsp:setProperty property="*" name="sb"/>
		- 필드 -> property                     //의미는 동일(주로 private로 설정)
		   private로 되었을 때 1. 생성자로 초기값 생성(javabean에서 X)
				    2.setter메소드로 설정(javabean에서는 setter이용)
	4.생성자는 새로운 공간에 초기화하는 역할만 함
	
property = name 값이 다르면 전달이 안됨

<jsp:setProperty property="*" name="sb"/>
 - 자바빈 객체를 생성	<jsp:useBean id ="빈 이름" class = "자바빈클래스이름" scope="범위" />
	id : 생성될 자바빈 객체의 이름을 명시하는 곳
	class : 객체가 생성될 자바빈 클래스명을 기술하는 곳
		(패키지명을 포함한 자바 클래스의 풀네임을 기술한다)
	scope : 자바빈 객체의 유효 범위로 자바빈 객체가 공유되는 범위를 지정한다.
		(scope 속성값으로는 page, request, session, application을 가지며 scope 속성 생략시 기본값은 page)
 - 생성된 자바빈 객체에 프로퍼티 값을 저장	<jsp:setProperty name ="빈 이름" property="프로퍼티 이름" value="저장값"/>
 - 생성된 객체의 프로퍼티값을 가져옴 		<jsp:getProperty name ="~" property="~"/>

  


[주석]
<%--JSP주석 아무데서 사용--%>
<!-- 소스보기에서 보여짐 -->
//
/* 표현식선언,스크립틀릿 안에*/

5. 액션 태그
 - <jsp:useBean>   ---   자바빈을 사용할 때 
 - <jsp:setProperty>   ---   자바빈의 속성값을 저장할 때
 - <jsp:getProperty>   ---   자바빈의 속성값을 읽어올 때

 - <jsp:include>   ---   페이지를 모듈화 할 때



 - <jsp:forward>   ---   페이지의 흐름을 제어할 때           //브라우저에는 최종페이지 값 출력
	(forword 액션태그가 존재하면해당파일에 포함되면 html값이 출력안됨)
	1. <jsp : forword page = "이동할 페이지명" />
	2. <jsp : forword page = "이동할 페이지명"> </jsp : forword>
	3. <jsp : forword page = "이동할 페이지명">
		<jsp : param name = "paramName1" value = "var1"/>
	   </jsp : forword>
 - <jsp:plugin>   ---   애플릿을 사용할 때

[9대 내장 객체]
1.request --- 요청에 대한 처리/공유
양식 - 유효성검사 - 서버 요청 
클라이언트의 요청 정보를 저장하고 있는 객체
1.get방식으로 한글값이 value값으로 전송되면 tomcat이 UTF-8로 자동으로 인코딩시켜준다.
2.post방식으로 한글값이 value값으로 전송되면 tomcat이 자동으로 인코딩을 시켜주지 않기 때문에 직접 인코딩을 시켜야 한다.

** request 객체에서 자주 사용하는 method **
-void        setCharacterEncoding(String env); 인코딩 형식 UTF-8
-String      getParameter(String name); *(html값을 받아옴)
-String[]    getParameterValues(String name); *(여러개)
-Enumeration getParameterNames(name값을 불러옴)
-String      getRemoteAddr();   *(클라이언트의 ip주소구해옴)
-요청 URI = <%= request.getRequestURI() %> *ServerIP(/jsppro/request/ex4/requestinofo.jsp경로)
-컨텍스트 경로 = <%= request.getContextPath() %> 

2.response --- 페이지 이동 /쿠키(클라이언트 디렉토리 저장)/ 클라이언트의 요청에 대한 응답정보를 저장하고 있는 객체
 -(html) <meta http-equiv="refresh" content = "(int)초; url= 주소
 ★(js) <script language="javascript">
		alert("페이지 이동");
		/* location.href='first.jsp?name=test'; */
		location.href='http://www.naver.com';
	</script>
 - (jsp) response.sendRedirect("http://www.naver.com");



3.out --- 출력(대부분 표현식 태그로 출력)



4.session --- 공유/회원관리 프로그램 =비 슷= (cookie 제한적인경우)
 - Server - login 성공 - 쿠키생성 - client 임시폴더에 쿠키폴더 저장 -- session이 더 안전
*세션(Session) //공유 - 같은 브라우저끼리 사용 가능
	1.세션 설정
		name으로 지정한 이름에 value값을 할당한다.
		session.setAttribute(java.lang.String name, java.lang.Object value);
		ex) session.setAttribute("id", "abcd1234");
	2.세션 사용	
		name이란 이름에 해당되는 속성값을 Object타입으로 반환한다.
		session.getAttribute(java.lang.String name);
		ex)String id = (String) session.getAttribute("id);
	3.세션의 유지시간 설정
		세션의 최대 유지시간을 초 단위로 설정
		session.setMaxInaciveInterval();
	4.세션 삭제
		name으로 지정한 속성 값을 제거한다.
		session.removeAttribute(java.lang.String name); ed) "id"
		모든 세션 삭제 : session.invalidate();


*쿠키(Cookie) 
 	1. 쿠키 생성
		Cookie cook = new Cookie(String name, String value); ex)name = id
		Cookie cook = new Cookie("id", "test");
	2.쿠키 추가
		쿠키를 생성한 후에는 반드시 respone 객체의 addCookie()메소드를 사용해
		쿠키를 추가해 주어야 한다.
		response.addCookie(cook);           //Client 임시폴더에 쿠키파일 생성
	3.쿠키 값 변경
		쿠키 생성 후 쿠키의 새로운 이름에 대응하는 값을 새로 지정할 때
	cook.setValue(new Value);
	4.쿠키의 수명(지속시간) 설정 %로그인 상태 유지%   //보안 위험
		cook.setMaxAge(int 초단위);
		만약, 쿠키의 유효시간으로 설정 한다면  (60*60);
	5.쿠키 읽기
		Cookie[] cook = request.getCookie();
		쿠키의 이름 : cook.getName()
		쿠키의 값	    : cook.getValue()

		
	
5.apllication
	- 전체 영역 공유
		불러오기 <%=application.getAttribute("bla-bla") %>
6.config
7.pageContext

8.exception

request/session적당한 영역 공유

page 디렉티브

* EL 표현언어 *-------------------------------------------------------------------------------------------------
* 표현언어(Expression Language:EL)

String str = "jsp";

표현식 태그  : <%=  str%>
	       <%= article.getId()%>
	       <%=session.getAttribute("test")%>
	       <%=request.getParameter("name")%>
	       <%=request.getParameterValues("choice")%>


표현언어(EL) : ${str}
	       ${article.id}
	       ${sessionScope.test}
	       ${param.name}
	       ${paramValues.choice}
* EL 표현언어 *-------------------------------------------------------------------------------------------------